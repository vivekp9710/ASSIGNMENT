Quest 01:- What is React Js?
Ans:- 	   React is a popular JavaScript library used for building user interfaces (UIs) and front-end
	   applications. It was developed by Facebook and is maintained by both Facebook and a community of 
	   individual developers and companies. React allows developers to create reusable UI components and 
	   manage the dynamic updating of those components in response to changes in application state. 
	  It uses a declarative approach to building UIs, where developers describe how the UI should look at 
	  any given state, and React takes care of efficiently updating and rendering the UI.

Quset 02:- What is NPM in React Js?
Ans:-	   NPM (Node Package Manager) is a package manager for JavaScript and the default package manager for 
	   Node.js. In the context of React.js, NPM is used to manage and install external libraries, packages,
	   and dependencies that your React applications might need. It allows you to easily include and manage
 	   third-party code within your projects.



Quest 03:-  What is Role of Node Js in react Js?
Ans:- 	    Node.js is a server-side JavaScript runtime environment. In the context of React.js, Node.js is 
	    often used for various purposes, such as setting up a development environment, running build 
	    scripts, and creating server-side rendering (SSR) applications. Node.js provides the tools and 
	    runtime environment necessary for tasks like running a local development server, compiling and 
	    bundling React code, and performing other build-related tasks.



Quest 04:- What is CLI command In React Js?
Ans:- 	   CLI stands for Command Line Interface. In the context of React.js, the React CLI is a set of 
	   command-line tools that help developers create, manage, and build React applications more efficiently. 
	   One of the most commonly used React CLI tools is create-react-app, which sets up a new React project
	   with a basic structure, development server, and build scripts.



Quest 05:- What is Components in React Js?
Ans:-	   Components are the building blocks of React applications. They are reusable, isolated pieces of UI 
	   that can be composed together to create complex user interfaces. React components can be thought of 
           as self-contained units that have their own logic, state, and rendering behavior. Components can be 
	   classified into two main types: functional components and class components.



Quest 06:- What is Header and Content Components in React Js?
Ans:- 	   In a React application, Header and Content components are examples of UI components that serve 
	   specific purposes. The Header component might contain elements such as navigation menus, branding, 
	   and other information that appears at the top of the page. The Content component could hold the main
  	   content of the application, including text, images, forms, and other user interface elements.



Quest 07:- How to install React Js on Windows, Linux Operating System? How to install NPM and How to check 
	   version of NPM?
Ans :-	   Install Node.js: React applications rely on Node.js. Download and install Node.js from the official 
	   website: https://nodejs.org/

	   Install React: Once Node.js is installed, you can install React using the following command in your 
	   terminal or command prompt:
	   npm install -g create-react-app

	   Check NPM Version: To check the version of NPM, you can use the following command:
	   npm -v





Quest 08:- How to check version of React Js?
Ans:- 	   To check the version of React installed in your project, you can run the following command inside 
	   your project's directory:

	   npm list react
	   This will display the installed version of React in your project.




Quset 09:- How to change in components of React Js?
Ans:-	   Identify the Component: Locate the component you want to modify in your project's source code.

	  Make Changes: Open the component file and make the necessary modifications to its logic, rendering, 
	  or styling.

	  Save Changes: Save the file.

	  Hot Reloading (Development Mode): If you are using create-react-app or a similar development setup, 
	  the changes you make will automatically be reflected in your application while you are in development 
	  mode. You don't need to manually refresh the page.

	  Build and Deploy (Production Mode): Once you are satisfied with your changes, you can build the 
	  application and deploy it to a production environment. This typically involves running build scripts 
	  provided by your React CLI tool

